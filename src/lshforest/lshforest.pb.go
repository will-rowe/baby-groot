// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lshforest.proto

package lshforest

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LSHforest struct {
	K                    int32           `protobuf:"varint,1,opt,name=K,proto3" json:"K,omitempty"`
	L                    int32           `protobuf:"varint,2,opt,name=L,proto3" json:"L,omitempty"`
	KeyLookup            map[string]*Key `protobuf:"bytes,3,rep,name=KeyLookup,proto3" json:"KeyLookup,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Buckets              []*Bucket       `protobuf:"bytes,4,rep,name=Buckets,proto3" json:"Buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LSHforest) Reset()         { *m = LSHforest{} }
func (m *LSHforest) String() string { return proto.CompactTextString(m) }
func (*LSHforest) ProtoMessage()    {}
func (*LSHforest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8aa0917749b45ac, []int{0}
}

func (m *LSHforest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LSHforest.Unmarshal(m, b)
}
func (m *LSHforest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LSHforest.Marshal(b, m, deterministic)
}
func (m *LSHforest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LSHforest.Merge(m, src)
}
func (m *LSHforest) XXX_Size() int {
	return xxx_messageInfo_LSHforest.Size(m)
}
func (m *LSHforest) XXX_DiscardUnknown() {
	xxx_messageInfo_LSHforest.DiscardUnknown(m)
}

var xxx_messageInfo_LSHforest proto.InternalMessageInfo

func (m *LSHforest) GetK() int32 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *LSHforest) GetL() int32 {
	if m != nil {
		return m.L
	}
	return 0
}

func (m *LSHforest) GetKeyLookup() map[string]*Key {
	if m != nil {
		return m.KeyLookup
	}
	return nil
}

func (m *LSHforest) GetBuckets() []*Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

type Bucket struct {
	Pairs                []*Pair  `protobuf:"bytes,1,rep,name=Pairs,proto3" json:"Pairs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bucket) Reset()         { *m = Bucket{} }
func (m *Bucket) String() string { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()    {}
func (*Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8aa0917749b45ac, []int{1}
}

func (m *Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bucket.Unmarshal(m, b)
}
func (m *Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bucket.Marshal(b, m, deterministic)
}
func (m *Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bucket.Merge(m, src)
}
func (m *Bucket) XXX_Size() int {
	return xxx_messageInfo_Bucket.Size(m)
}
func (m *Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Bucket proto.InternalMessageInfo

func (m *Bucket) GetPairs() []*Pair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

type Pair struct {
	SubSequence          string   `protobuf:"bytes,1,opt,name=SubSequence,proto3" json:"SubSequence,omitempty"`
	Keys                 []string `protobuf:"bytes,2,rep,name=Keys,proto3" json:"Keys,omitempty"`
	SketchPartition      []uint64 `protobuf:"varint,3,rep,packed,name=SketchPartition,proto3" json:"SketchPartition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pair) Reset()         { *m = Pair{} }
func (m *Pair) String() string { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()    {}
func (*Pair) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8aa0917749b45ac, []int{2}
}

func (m *Pair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pair.Unmarshal(m, b)
}
func (m *Pair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pair.Marshal(b, m, deterministic)
}
func (m *Pair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pair.Merge(m, src)
}
func (m *Pair) XXX_Size() int {
	return xxx_messageInfo_Pair.Size(m)
}
func (m *Pair) XXX_DiscardUnknown() {
	xxx_messageInfo_Pair.DiscardUnknown(m)
}

var xxx_messageInfo_Pair proto.InternalMessageInfo

func (m *Pair) GetSubSequence() string {
	if m != nil {
		return m.SubSequence
	}
	return ""
}

func (m *Pair) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Pair) GetSketchPartition() []uint64 {
	if m != nil {
		return m.SketchPartition
	}
	return nil
}

type Key struct {
	GraphID              uint32   `protobuf:"varint,1,opt,name=GraphID,proto3" json:"GraphID,omitempty"`
	Node                 uint64   `protobuf:"varint,2,opt,name=Node,proto3" json:"Node,omitempty"`
	OffSet               uint32   `protobuf:"varint,3,opt,name=OffSet,proto3" json:"OffSet,omitempty"`
	SubPath              []uint64 `protobuf:"varint,4,rep,packed,name=SubPath,proto3" json:"SubPath,omitempty"`
	Ref                  uint32   `protobuf:"varint,5,opt,name=Ref,proto3" json:"Ref,omitempty"`
	RC                   bool     `protobuf:"varint,6,opt,name=RC,proto3" json:"RC,omitempty"`
	Sketch               []uint64 `protobuf:"varint,7,rep,packed,name=Sketch,proto3" json:"Sketch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8aa0917749b45ac, []int{3}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetGraphID() uint32 {
	if m != nil {
		return m.GraphID
	}
	return 0
}

func (m *Key) GetNode() uint64 {
	if m != nil {
		return m.Node
	}
	return 0
}

func (m *Key) GetOffSet() uint32 {
	if m != nil {
		return m.OffSet
	}
	return 0
}

func (m *Key) GetSubPath() []uint64 {
	if m != nil {
		return m.SubPath
	}
	return nil
}

func (m *Key) GetRef() uint32 {
	if m != nil {
		return m.Ref
	}
	return 0
}

func (m *Key) GetRC() bool {
	if m != nil {
		return m.RC
	}
	return false
}

func (m *Key) GetSketch() []uint64 {
	if m != nil {
		return m.Sketch
	}
	return nil
}

func init() {
	proto.RegisterType((*LSHforest)(nil), "lshforest.LSHforest")
	proto.RegisterMapType((map[string]*Key)(nil), "lshforest.LSHforest.KeyLookupEntry")
	proto.RegisterType((*Bucket)(nil), "lshforest.Bucket")
	proto.RegisterType((*Pair)(nil), "lshforest.Pair")
	proto.RegisterType((*Key)(nil), "lshforest.Key")
}

func init() { proto.RegisterFile("lshforest.proto", fileDescriptor_a8aa0917749b45ac) }

var fileDescriptor_a8aa0917749b45ac = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0x99, 0xdc, 0x6a, 0x4e, 0xb5, 0xd5, 0x59, 0xc8, 0xe0, 0x2a, 0x44, 0x85, 0x80, 0x50,
	0xa1, 0x6e, 0xc4, 0x9d, 0x56, 0x51, 0x49, 0xd0, 0x72, 0xf2, 0x04, 0x69, 0x9d, 0x90, 0x92, 0xd2,
	0xa9, 0xc9, 0x44, 0xc8, 0xd3, 0xf8, 0x74, 0xbe, 0x87, 0xcc, 0x4c, 0x2f, 0xd1, 0xdd, 0xff, 0x9f,
	0xcb, 0x37, 0x7f, 0x0e, 0x81, 0xe1, 0xb2, 0x2e, 0x72, 0x51, 0xf1, 0x5a, 0x8e, 0xd6, 0x95, 0x90,
	0x82, 0xfa, 0xbb, 0x42, 0xf8, 0x43, 0xc0, 0x4f, 0xd2, 0x17, 0xe3, 0xe8, 0x21, 0x90, 0x98, 0x91,
	0x80, 0x44, 0x2e, 0x92, 0x58, 0xb9, 0x84, 0x59, 0xc6, 0x25, 0xf4, 0x1e, 0xfc, 0x98, 0xb7, 0x89,
	0x10, 0x65, 0xb3, 0x66, 0x76, 0x60, 0x47, 0xfd, 0xf1, 0xf9, 0x68, 0x4f, 0xde, 0x41, 0x46, 0xbb,
	0xa9, 0xa7, 0x95, 0xac, 0x5a, 0xdc, 0x6f, 0xd1, 0x2b, 0xe8, 0x3d, 0x34, 0xf3, 0x92, 0xcb, 0x9a,
	0x39, 0x1a, 0x70, 0xd2, 0x01, 0x98, 0x0e, 0x6e, 0x27, 0xce, 0x12, 0x18, 0xfc, 0x25, 0xd1, 0x63,
	0xb0, 0x4b, 0xde, 0xea, 0x7c, 0x3e, 0x2a, 0x49, 0x2f, 0xc0, 0xfd, 0xca, 0x96, 0x0d, 0xd7, 0x29,
	0xfb, 0xe3, 0x41, 0x07, 0x17, 0xf3, 0x16, 0x4d, 0xf3, 0xce, 0xba, 0x25, 0xe1, 0x35, 0x78, 0x06,
	0x4c, 0x2f, 0xc1, 0x9d, 0x66, 0x8b, 0xaa, 0x66, 0x44, 0x47, 0x18, 0x76, 0x76, 0x54, 0x1d, 0x4d,
	0x37, 0xcc, 0xc1, 0x51, 0x82, 0x06, 0xd0, 0x4f, 0x9b, 0x59, 0xca, 0x3f, 0x1b, 0xbe, 0x9a, 0xf3,
	0xcd, 0xe3, 0xdd, 0x12, 0xa5, 0xe0, 0xc4, 0xbc, 0xad, 0x99, 0x15, 0xd8, 0x91, 0x8f, 0x5a, 0xd3,
	0x08, 0x86, 0x69, 0xc9, 0xe5, 0xbc, 0x98, 0x66, 0x95, 0x5c, 0xc8, 0x85, 0x58, 0xe9, 0x93, 0x39,
	0xf8, 0xbf, 0x1c, 0x7e, 0x13, 0xb0, 0x63, 0xde, 0x52, 0x06, 0xbd, 0xe7, 0x2a, 0x5b, 0x17, 0xaf,
	0x8f, 0xfa, 0x8d, 0x23, 0xdc, 0x5a, 0xc5, 0x7f, 0x13, 0x1f, 0xe6, 0x1b, 0x1d, 0xd4, 0x9a, 0x9e,
	0x82, 0xf7, 0x9e, 0xe7, 0x29, 0x97, 0xcc, 0xd6, 0xc3, 0x1b, 0xa7, 0x28, 0x69, 0x33, 0x9b, 0x66,
	0xb2, 0xd0, 0x17, 0x76, 0x70, 0x6b, 0xd5, 0xf1, 0x90, 0xe7, 0xcc, 0xd5, 0xe3, 0x4a, 0xd2, 0x01,
	0x58, 0x38, 0x61, 0x5e, 0x40, 0xa2, 0x03, 0xb4, 0x70, 0xa2, 0x98, 0x26, 0x1c, 0xeb, 0xe9, 0xd5,
	0x8d, 0x9b, 0x79, 0xfa, 0xa7, 0xb9, 0xf9, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x31, 0x76, 0x4a, 0x4b,
	0x47, 0x02, 0x00, 0x00,
}
